# -*- coding: utf-8 -*-
"""IBM-SQLDATASCIENCE.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/14COr49nHhpzdhtEZi9ak1aHZ-uGjHU5W
"""

# Commented out IPython magic to ensure Python compatibility.
# %load_ext sql

import csv, sqlite3
con = sqlite3.connect("FinalDB.db")
cur = con.cursor()
!pip install -q pandas==1.3.5

# Commented out IPython magic to ensure Python compatibility.
# %sql sqlite:///FinalDB.db

import pandas as pd
df = pd.read_csv('/content/ChicagoCrimeData.csv')

df_census = pd.read_csv('/content/ChicagoCensusData.csv')
df_school = pd.read_csv('/content/ChicagoPublicSchools.csv')

df.to_sql("ChicagoCrimeData", con, if_exists='replace', index=False,method="multi")

df_census.to_sql("ChicagoCensusData", con, if_exists='replace', index=False,method="multi")
df_school.to_sql("ChicagoPublicSchoolsData", con, if_exists='replace', index=False,method="multi")

df_census.info()

df_school.info()

df_census.head()

df.head()

df.info()

# Commented out IPython magic to ensure Python compatibility.
#Find the total number of crimes recorded in the CRIME table.
# %sql SELECT COUNT(date) FROM ChicagoCrimeData;

# Commented out IPython magic to ensure Python compatibility.
#List community areas with per capita income less than 11000.
# %sql SELECT COMMUNITY_AREA_NAME FROM ChicagoCensusData WHERE PER_CAPITA_INCOME < 11000;

#List all case numbers for crimes involving minors?(children are not considered minors for the purposes of crime analysis)

# Commented out IPython magic to ensure Python compatibility.
# %sql SELECT CASE_NUMBER FROM ChicagoCrimeData WHERE DESCRIPTION lIKE '%minor%';

# Commented out IPython magic to ensure Python compatibility.
#List all kidnapping crimes involving a child?
# %sql SELECT CASE_NUMBER FROM ChicagoCrimeData WHERE upper (PRIMARY_TYPE) = 'KIDNAPPING' AND upper(DESCRIPTION) lIKE '%child%';

# Commented out IPython magic to ensure Python compatibility.
#What kinds of crimes were recorded at schools?
# %sql SELECT DISTINCT(PRIMARY_TYPE) FROM ChicagoCrimeData WHERE upper (LOCATION_DESCRIPTION) lIKE '%SCHOOL%';

# Commented out IPython magic to ensure Python compatibility.
#List the average safety score for each type of school.
# %sql SELECT "Elementary, Middle, High School" as Type_of_School, AVG(SAFETY_SCORE) as avg_safety_score FROM ChicagoPublicSchoolsData GROUP BY "Elementary, Middle, High School" ;

# Commented out IPython magic to ensure Python compatibility.
#List 5 community areas with highest % of households below poverty line
# %sql SELECT COMMUNITY_AREA_NAME, PERCENT_HOUSEHOLDS_BELOW_POVERTY  FROM ChicagoCensusData ORDER BY PERCENT_HOUSEHOLDS_BELOW_POVERTY  desc LIMIT 5;

# Commented out IPython magic to ensure Python compatibility.
#Which community area is most crime prone?
# %sql SELECT COMMUNITY_AREA_NUMBER, COUNT(ID) as Number_Of_Crime FROM ChicagoCrimeData GROUP BY COMMUNITY_AREA_NUMBER  ORDER BY COUNT(ID) desc LIMIT 1;

# Commented out IPython magic to ensure Python compatibility.
#Use a sub-query to find the name of the community area with highest hardship index
# %sql SELECT COMMUNITY_AREA_NAME, HARDSHIP_INDEX FROM ChicagoCensusData WHERE  HARDSHIP_INDEX =(SELECT MAX(HARDSHIP_INDEX) FROM ChicagoCensusData );

# Commented out IPython magic to ensure Python compatibility.
#Use a sub-query to determine the Community Area Name with most number of crimes?
# %sql SELECT COMMUNITY_AREA_NAME FROM ChicagoCensusData WHERE COMMUNITY_AREA_NUMBER = (SELECT COMMUNITY_AREA_NUMBER FROM ChicagoCrimeData GROUP BY COMMUNITY_AREA_NUMBER ORDER BY COUNT(ID) DESC LIMIT 1 );